{"version":3,"sources":["components/Map.module.css","components/Detail.module.css","components/GeneralResult.module.css","components/Bar.module.css","components/Province.module.css","App.module.css","helpers.js","ProvinceContext.js","components/Province.js","components/Map.js","components/Bar.js","components/Detail.js","components/GeneralResult.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getPartysColor","id","difference","inMin","outMin","BTP","TKP","BBP","CHP","DP","MHP","HDP","DSP","round","num","Math","calcPercent","count","totalCount","sumOf","results","map","result","voteCount","reduce","a","b","parseInt","formatNumber","toString","replace","ProvinceContext","createContext","ProvinceProvider","props","useState","province","setProvince","Provider","value","children","Province","isDiffShowing","appendActiveProvinces","useContext","name","pathToBeDrawn","provincesPath","sortedResult","useMemo","sort","firstProvince","secondProvince","className","styles","onClick","style","fill","d","Map","setIsDiffShowing","activeProvinces","setActiveProvinces","provinceName","includes","container","btnDifference","version","xmlns","xmlnsXlink","viewBox","xmlSpace","data","key","holder","gradientBar","list","item","box","background","Bar","color","votePercent","bar","width","percent","Detail","closeDetail","Fragment","overlay","height","document","body","scrollHeight","title","createBar","btnExit","GeneralResult","totalPartysVotes","Diger","chartData","setChartData","totalVote","forEach","Object","keys","chart","entries","party","label","dataIndex","percentage","labelStyle","fontSize","fontFamily","animate","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6aa85c22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Map_container__3pxt6\",\"btnDifference\":\"Map_btnDifference__CRjGt\",\"box\":\"Map_box__3TJmJ\",\"list\":\"Map_list__3cq7p\",\"item\":\"Map_item__35VQX\",\"name\":\"Map_name__143yI\",\"holder\":\"Map_holder__2prSG\",\"gradientBar\":\"Map_gradientBar__3Audh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__2dxf2\",\"title\":\"Detail_title__lWMc7\",\"btnExit\":\"Detail_btnExit__3XOTi\",\"overlay\":\"Detail_overlay__9Y68T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GeneralResult_container__GfSMY\",\"title\":\"GeneralResult_title__3Rswo\",\"totalVote\":\"GeneralResult_totalVote__1YwOt\",\"chart\":\"GeneralResult_chart__1Jlo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bar_container__2FULM\",\"bar\":\"Bar_bar__30xnK\",\"percent\":\"Bar_percent__1Gh1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"province\":\"Province_province__AKq57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3nOza\"};","const scale = (x, inMin, inMax, outMin, outMax) => {\n  return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n};\n\nexport const getPartysColor = (id, difference) => {\n  const colors = {\n    'Saadet Partisi': '#f05053',\n    BTP: '#b8f050',\n    TKP: '#d35400',\n    'Vatan Partisi': '#3498db',\n    BBP: '#e74c3c',\n    '6': '#fff',\n    CHP: '#ff3f34',\n    'AK Parti': '#ff9400',\n    DP: '#2980b9',\n    MHP: '#575fcf',\n    'Ä°yi Parti': '#f78fb3',\n    HDP: '#B33771',\n    DSP: '#3dc1d3'\n  };\n\n  if (difference) return `hsl(207, 37%, ${scale(difference, 0, 100, 85, 20)}%)`;\n  else return colors[id] || '#d1d8e0';\n};\n\nexport const round = num => Math.round(num * 100) / 100;\n\nexport const calcPercent = (count, totalCount) => {\n  return round((count / totalCount) * 100);\n};\n\nexport const sumOf = results => {\n  return results\n    .map(result => result.voteCount)\n    .reduce((a, b) => parseInt(a) + parseInt(b), 0);\n};\n\nexport const formatNumber = num => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n","import React, { useState, createContext } from 'react';\n\nexport const ProvinceContext = createContext();\n\nexport const ProvinceProvider = props => {\n  const [province, setProvince] = useState();\n  return (\n    <ProvinceContext.Provider value={{ province, setProvince }}>\n      {props.children}\n    </ProvinceContext.Provider>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport { ProvinceContext } from '../ProvinceContext';\nimport { getPartysColor, sumOf, calcPercent } from '../helpers';\nimport provincesPath from '../data/provincesPath.json';\nimport styles from './Province.module.css';\n\nconst Province = ({ province, isDiffShowing, appendActiveProvinces }) => {\n  const { setProvince } = useContext(ProvinceContext);\n  const { name, results, id } = province;\n  const pathToBeDrawn = provincesPath[id - 1];\n\n  const sortResults = () => results.sort((a, b) => b.voteCount - a.voteCount);\n  const sortedResult = useMemo(sortResults, []);\n\n  const { 0: firstProvince, 1: secondProvince } = sortedResult;\n\n  const difference = () =>\n    isDiffShowing &&\n    calcPercent(\n      firstProvince.voteCount - secondProvince.voteCount,\n      sumOf(sortedResult)\n    );\n\n  appendActiveProvinces(firstProvince.name);\n\n  const handleClick = () => {\n    setProvince(province);\n  };\n\n  return (\n    <g\n      className={styles.province}\n      onClick={handleClick}\n      id={name}\n      style={{ fill: getPartysColor(firstProvince.name, difference()) }}\n    >\n      <path d={pathToBeDrawn} />\n    </g>\n  );\n};\n\nexport default Province;\n","import React, { useState } from 'react';\nimport { getPartysColor } from '../helpers.js';\nimport data from '../data/secim.json';\nimport styles from './Map.module.css';\nimport Province from './Province';\n\nconst Map = () => {\n  const [isDiffShowing, setIsDiffShowing] = useState(false);\n  const [activeProvinces, setActiveProvinces] = useState([]);\n\n  const handleClick = () => {\n    setIsDiffShowing(!isDiffShowing);\n  };\n\n  const appendActiveProvinces = provinceName => {\n    if (!activeProvinces.includes(provinceName))\n      setActiveProvinces([...activeProvinces, provinceName]);\n  };\n\n  return (\n    <div className={styles.container}>\n      <button className={styles.btnDifference} onClick={handleClick}>\n        {isDiffShowing ? 'Genel Sonucu Goster' : 'Farki Goster'}\n      </button>\n      <div>\n        {/* https://github.com/dnomak/svg-turkiye-haritasi */}\n        <svg\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 0 1007.478 527.323\"\n          xmlSpace=\"preserve\"\n        >\n          <g>\n            {data.map(province => (\n              <Province\n                key={province.id}\n                province={province}\n                isDiffShowing={isDiffShowing}\n                appendActiveProvinces={appendActiveProvinces}\n              />\n            ))}\n          </g>\n        </svg>\n\n        {isDiffShowing ? (\n          <div className={styles.holder}>\n            <span>Fark Fazla</span> <div className={styles.gradientBar}></div>{' '}\n            <span>Fark Az</span>\n          </div>\n        ) : (\n          <ul className={styles.list}>\n            {activeProvinces.map(provinceName => (\n              <li className={styles.item} key={provinceName}>\n                <div\n                  className={styles.box}\n                  style={{\n                    background: getPartysColor(provinceName)\n                  }}\n                />\n                <p className={styles.name}>{provinceName}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport styles from './Bar.module.css';\n\nconst Bar = ({ name, color, voteCount, votePercent }) => {\n  return (\n    <div className={styles.container}>\n      <h3>{name}</h3>\n      <div\n        className={styles.bar}\n        style={{ background: color, width: `${votePercent}%` }}\n      >\n        <span className={styles.percent}>{votePercent + '%'}</span>\n      </div>\n      <p>Oy: {voteCount}</p>\n    </div>\n  );\n};\n\nexport default Bar;\n","import React, { useContext } from 'react';\nimport { ProvinceContext } from '../ProvinceContext';\nimport { getPartysColor, calcPercent, sumOf, formatNumber } from '../helpers';\nimport styles from './Detail.module.css';\nimport Bar from './Bar';\n\nconst Detail = () => {\n  const { province, setProvince } = useContext(ProvinceContext);\n\n  const closeDetail = () => {\n    setProvince('');\n  };\n\n  const createBar = ({ name, id, voteCount }) => {\n    const votePercent = calcPercent(voteCount, sumOf(province.results));\n    const color = getPartysColor(name);\n\n    return (\n      <Bar\n        key={id}\n        name={name}\n        color={color}\n        voteCount={formatNumber(voteCount)}\n        votePercent={votePercent}\n      />\n    );\n  };\n\n  return province ? (\n    <React.Fragment>\n      <div\n        className={styles.overlay}\n        style={{ height: `${document.body.scrollHeight}px` }}\n        onClick={closeDetail}\n      />\n      <div className={styles.container}>\n        <h1 className={styles.title}>{province.name}</h1>\n\n        {province.results.map(result => createBar(result))}\n\n        <button className={styles.btnExit} onClick={closeDetail}>\n          CLOSE\n        </button>\n      </div>\n    </React.Fragment>\n  ) : (\n    ''\n  );\n};\n\nexport default Detail;\n","import React, { useState } from 'react';\nimport { sumOf, getPartysColor, round, formatNumber } from '../helpers';\nimport PieChart from 'react-minimal-pie-chart';\nimport styles from './GeneralResult.module.css';\nimport data from '../data/secim.json';\nimport Bar from './Bar.js';\n\nconst GeneralResult = () => {\n  let totalPartysVotes = { 'AK Parti': 0, CHP: 0, MHP: 0, Diger: 0 };\n  const [chartData, setChartData] = useState();\n\n  const totalVote = data\n    .map(province => sumOf(province.results))\n    .reduce((a, b) => a + b, 0);\n\n  // Calculate partys' vote\n  data.forEach(province => {\n    province.results.forEach(({ name, voteCount }) => {\n      if (Object.keys(totalPartysVotes).includes(name))\n        totalPartysVotes[name] += parseInt(voteCount);\n      else totalPartysVotes.Diger += parseInt(voteCount);\n    });\n  });\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>TÃ¼rkiye Geneli</h2>\n\n      <PieChart\n        className={styles.chart}\n        data={Object.entries(totalPartysVotes).map(party => ({\n          title: party[0],\n          value: party[1],\n          color: getPartysColor(party[0])\n        }))}\n        label={({ data, dataIndex }) => {\n          chartData || setChartData(data);\n          return round(data[dataIndex].percentage) + '%';\n        }}\n        labelStyle={{\n          fontSize: '5px',\n          fontFamily: 'sans-serif',\n          fill: '#121212'\n        }}\n        animate\n      />\n\n      <h3 className={styles.totalVote}>Toplam Oy: {formatNumber(totalVote)}</h3>\n      {chartData\n        ? chartData.map(({ title, color, percentage }) => (\n            <Bar\n              key={title}\n              name={title}\n              color={color}\n              votePercent={round(percentage)}\n              voteCount={formatNumber(totalPartysVotes[title])}\n            />\n          ))\n        : ''}\n    </div>\n  );\n};\n\nexport default GeneralResult;\n","import React from 'react';\nimport Map from './components/Map';\nimport Detail from './components/Detail';\nimport { ProvinceProvider } from './ProvinceContext';\nimport GeneralResult from './components/GeneralResult';\nimport styles from './App.module.css';\n\nconst App = () => {\n  return (\n    <ProvinceProvider>\n      <div className={styles.container}>\n        <GeneralResult />\n        <Map />\n      </div>\n      <Detail />\n    </ProvinceProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}