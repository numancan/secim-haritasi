{"version":3,"sources":["components/Map.module.css","components/Detail.module.css","components/GeneralResult.module.css","components/Bar.module.css","components/Province.module.css","App.module.css","helpers.js","ProvinceContext.js","components/Province.js","components/Map.js","components/Bar.js","components/Detail.js","components/GeneralResult.js","components/RandomResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getPartysColor","id","difference","inMin","outMin","BTP","TKP","BBP","CHP","DP","MHP","HDP","DSP","round","num","Math","calcPercent","count","totalCount","sumOf","results","map","result","voteCount","reduce","a","b","parseInt","formatNumber","toString","replace","ProvinceContext","createContext","ProvinceProvider","props","useState","province","setProvince","Provider","value","children","Province","isDiffShowing","appendActiveProvinces","useContext","name","pathToBeDrawn","provincesPath","sort","firstProvince","firstProvinceCount","secondProvinceCount","className","styles","onClick","style","fill","d","Map","setIsDiffShowing","activeProvinces","setActiveProvinces","provinceName","includes","container","btnDifference","version","xmlns","xmlnsXlink","viewBox","xmlSpace","data","key","holder","gradientBar","list","item","box","background","Bar","color","votePercent","bar","width","percent","Detail","closeDetail","Fragment","overlay","title","createBar","btnExit","GeneralResult","totalPartysVotes","Diger","chartData","setChartData","totalVote","forEach","Object","keys","chart","entries","party","label","dataIndex","percentage","labelStyle","fontSize","fontFamily","animate","RandomResults","randomCount","window","innerWidth","randomIndex","floor","random","length","selectedProvinces","slice","console","log","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,cAAgB,2BAA2B,IAAM,iBAAiB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,OAAS,oBAAoB,YAAc,2B,8+vCCA7OD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,gBCAlID,EAAOC,QAAU,CAAC,UAAY,iCAAiC,MAAQ,6BAA6B,UAAY,iCAAiC,MAAQ,+B,gBCAzJD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,IAAM,iBAAiB,QAAU,uB,8ixRCAtFD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,UAAY,yB,0JCGjBC,EAAiB,SAACC,EAAIC,GACjC,IALgBC,EAAcC,EAqB9B,OAAIF,EAAkB,iBAAN,QAA8BA,GArB9BC,EAqB0C,KAAY,IArBxCC,EAqBoC,MAAL,IApBTD,GAASC,EAoB7C,MAhBD,CACb,iBAAkB,UAClBC,IAAK,UACLC,IAAK,UACL,gBAAiB,UACjBC,IAAK,UACL,EAAK,OACLC,IAAK,UACL,WAAY,UACZC,GAAI,UACJC,IAAK,UACL,iBAAa,UACbC,IAAK,UACLC,IAAK,WAIYX,IAAO,WAGfY,EAAQ,SAAAC,GAAG,OAAIC,KAAKF,MAAY,IAANC,GAAa,KAEvCE,EAAc,SAACC,EAAOC,GACjC,OAAOL,EAAOI,EAAQC,EAAc,MAGzBC,EAAQ,SAAAC,GACnB,OAAOA,EACJC,KAAI,SAAAC,GAAM,OAAIA,EAAOC,aACrBC,QAAO,SAACC,EAAGC,GAAJ,OAAUC,SAASF,GAAKE,SAASD,KAAI,IAGpCE,EAAe,SAAAd,GAC1B,OAAOA,EAAIe,WAAWC,QAAQ,0BAA2B,Q,uBCpC9CC,EAAkBC,0BAElBC,EAAmB,SAAAC,GAAU,IAAD,EACPC,qBADO,mBAChCC,EADgC,KACtBC,EADsB,KAEvC,OACE,kBAACN,EAAgBO,SAAjB,CAA0BC,MAAO,CAAEH,WAAUC,gBAC1CH,EAAMM,W,yBCoCEC,EAtCE,SAAC,GAAwD,IAIpEvC,EAJckC,EAAqD,EAArDA,SAAUM,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,sBACnCN,EAAgBO,qBAAWb,GAA3BM,YACAQ,EAAsBT,EAAtBS,KAAMzB,EAAgBgB,EAAhBhB,QAASnB,EAAOmC,EAAPnC,GACjB6C,EAAgBC,EAAc9C,EAAK,GAGzCmB,EAAQ4B,MAAK,SAACvB,EAAGC,GAAJ,OAAUA,EAAEH,UAAYE,EAAEF,aACvC,IAAM0B,EAAgB7B,EAAQ,GAG9B,GAFAuB,EAAsBM,EAAcJ,MAEhCH,EAAe,CAAC,IAEAQ,EAEd9B,EAFF,GAAKG,UACW4B,EACd/B,EADF,GAAKG,UAGPrB,EAAac,EACXkC,EAAqBC,EACrBhC,EAAMC,IAQV,OACE,uBACEgC,UAAWC,IAAOjB,SAClBkB,QAPgB,WAClBjB,EAAYD,IAOVnC,GAAI4C,EACJU,MAAO,CAAEC,KAAMxD,EAAeiD,EAAcJ,KAAM3C,KAElD,0BAAMuD,EAAGX,MC+BAY,EAhEH,WAAO,IAAD,EAC0BvB,oBAAS,GADnC,mBACTO,EADS,KACMiB,EADN,OAE8BxB,mBAAS,IAFvC,mBAETyB,EAFS,KAEQC,EAFR,KAQVlB,EAAwB,SAAAmB,GACvBF,EAAgBG,SAASD,IAC5BD,EAAmB,GAAD,mBAAKD,GAAL,CAAsBE,MAG5C,OACE,yBAAKV,UAAWC,IAAOW,WACrB,4BAAQZ,UAAWC,IAAOY,cAAeX,QAXzB,WAClBK,GAAkBjB,KAWbA,EAAgB,sBAAwB,gBAE3C,6BAEE,yBACEwB,QAAQ,MACRC,MAAM,6BACNC,WAAW,+BACXC,QAAQ,uBACRC,SAAS,YAET,2BACGC,EAAKlD,KAAI,SAAAe,GAAQ,OAChB,kBAAC,EAAD,CACEoC,IAAKpC,EAASnC,GACdmC,SAAUA,EACVM,cAAeA,EACfC,sBAAuBA,SAM9BD,EACC,yBAAKU,UAAWC,IAAOoB,QACrB,4CADF,IAC0B,yBAAKrB,UAAWC,IAAOqB,cAAoB,IACnE,0CAGF,wBAAItB,UAAWC,IAAOsB,MACnBf,EAAgBvC,KAAI,SAAAyC,GAAY,OAC/B,wBAAIV,UAAWC,IAAOuB,KAAMJ,IAAKV,GAC/B,yBACEV,UAAWC,IAAOwB,IAClBtB,MAAO,CACLuB,WAAY9E,EAAe8D,MAG/B,uBAAGV,UAAWC,IAAOR,MAAOiB,W,gCC1C7BiB,EAfH,SAAC,GAA6C,IAA3ClC,EAA0C,EAA1CA,KAAMmC,EAAoC,EAApCA,MAAOzD,EAA6B,EAA7BA,UAAW0D,EAAkB,EAAlBA,YACrC,OACE,yBAAK7B,UAAWC,IAAOW,WACrB,4BAAKnB,GACL,yBACEO,UAAWC,IAAO6B,IAClB3B,MAAO,CAAEuB,WAAYE,EAAOG,MAAM,GAAD,OAAKF,EAAL,OAEjC,0BAAM7B,UAAWC,IAAO+B,SAAUH,EAAc,MAElD,kCAAQ1D,KCiCC8D,EAxCA,WAAO,IAAD,EACezC,qBAAWb,GAArCK,EADW,EACXA,SAAUC,EADC,EACDA,YAEZiD,EAAc,WAClBjD,EAAY,KAkBd,OAAOD,EACL,kBAAC,IAAMmD,SAAP,KACE,yBAAKnC,UAAWC,IAAOmC,QAASlC,QAASgC,IACzC,yBAAKlC,UAAWC,IAAOW,WACrB,wBAAIZ,UAAWC,IAAOoC,OAAQrD,EAASS,MAEtCT,EAAShB,QAAQC,KAAI,SAAAC,GAAM,OArBhB,SAAC,GAA6B,IAA3BuB,EAA0B,EAA1BA,KAAM5C,EAAoB,EAApBA,GAAIsB,EAAgB,EAAhBA,UACvB0D,EAAcjE,EAAYO,EAAWJ,EAAMiB,EAAShB,UACpD4D,EAAQhF,EAAe6C,GAE7B,OACE,kBAAC,EAAD,CACE2B,IAAKvE,EACL4C,KAAMA,EACNmC,MAAOA,EACPzD,UAAWK,EAAaL,GACxB0D,YAAaA,IAWmBS,CAAUpE,MAE1C,4BAAQ8B,UAAWC,IAAOsC,QAASrC,QAASgC,GAA5C,WAMJ,I,gCCqBWM,EAxDO,WACpB,IAAIC,EAAmB,CAAE,WAAY,EAAGrF,IAAK,EAAGE,IAAK,EAAGoF,MAAO,GADrC,EAEQ3D,qBAFR,mBAEnB4D,EAFmB,KAERC,EAFQ,KAIpBC,EAAY1B,EACflD,KAAI,SAAAe,GAAQ,OAAIjB,EAAMiB,EAAShB,YAC/BI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAW3B,OARA6C,EAAK2B,SAAQ,SAAA9D,GACXA,EAAShB,QAAQ8E,SAAQ,YAA0B,IAAvBrD,EAAsB,EAAtBA,KAAMtB,EAAgB,EAAhBA,UAC5B4E,OAAOC,KAAKP,GAAkB9B,SAASlB,GACzCgD,EAAiBhD,IAASlB,SAASJ,GAChCsE,EAAiBC,OAASnE,SAASJ,SAK1C,yBAAK6B,UAAWC,IAAOW,WACrB,wBAAIZ,UAAWC,IAAOoC,OAAtB,qBAEA,kBAAC,IAAD,CACErC,UAAWC,IAAOgD,MAClB9B,KAAM4B,OAAOG,QAAQT,GAAkBxE,KAAI,SAAAkF,GAAK,MAAK,CACnDd,MAAOc,EAAM,GACbhE,MAAOgE,EAAM,GACbvB,MAAOhF,EAAeuG,EAAM,QAE9BC,MAAO,YAA0B,IAAvBjC,EAAsB,EAAtBA,KAAMkC,EAAgB,EAAhBA,UAEd,OADAV,GAAaC,EAAazB,GACnB1D,EAAM0D,EAAKkC,GAAWC,YAAc,KAE7CC,WAAY,CACVC,SAAU,MACVC,WAAY,aACZrD,KAAM,WAERsD,SAAO,IAGT,wBAAI1D,UAAWC,IAAO4C,WAAtB,cAA6CrE,EAAaqE,IACzDF,EACGA,EAAU1E,KAAI,gBAAGoE,EAAH,EAAGA,MAAOT,EAAV,EAAUA,MAAO0B,EAAjB,EAAiBA,WAAjB,OACZ,kBAAC,EAAD,CACElC,IAAKiB,EACL5C,KAAM4C,EACNT,MAAOA,EACPC,YAAapE,EAAM6F,GACnBnF,UAAWK,EAAaiE,EAAiBJ,SAG7C,K,iBCvBKsB,EA/BO,WACpB,IAAMC,EAAcC,OAAOC,WAAa,KAAO,EAAI,EAC7CC,EAAcpG,KAAKqG,MAAMrG,KAAKsG,SAAW9C,EAAK+C,OAAS,EAAIN,GAC3DO,EAAoBhD,EAAKiD,MAAML,EAAaA,EAAcH,GAGhE,OAFAS,QAAQC,IAAI,0CAA2CH,GAuBrD,ICVWI,EAbH,WACV,OACE,kBAAC,EAAD,CAAkBvE,UAAU,QAC1B,kBAAC,EAAD,MACA,yBAAKA,UAAWC,IAAOW,WACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCJA4D,EAAcC,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BrB,QAAQC,IACN,iHAKES,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBf,QAAQC,IAAI,sCAGRS,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAAAC,GACLzB,QAAQyB,MAAM,4CAA6CA,MC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,kBAAwBvC,OAAOa,SAAS2B,MACpDC,SAAWzC,OAAOa,SAAS4B,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,kBAAN,sBAEP5B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,GACHK,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BtB,OAAOa,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLxB,QAAQC,IACN,oEArFA4C,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCd,QAAQC,IACN,iHAMJO,EAAgBC,EAAOC,OC1C/BE,K","file":"static/js/main.805e024e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Map_container__3kmgG\",\"btnDifference\":\"Map_btnDifference__Hq_NN\",\"box\":\"Map_box__2aM8j\",\"list\":\"Map_list__3_fGa\",\"item\":\"Map_item__2xgAc\",\"name\":\"Map_name__33Jsp\",\"holder\":\"Map_holder__3dk0y\",\"gradientBar\":\"Map_gradientBar__2zvCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__MvSO0\",\"title\":\"Detail_title__2HQQJ\",\"btnExit\":\"Detail_btnExit__2VMfG\",\"overlay\":\"Detail_overlay__2bcbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GeneralResult_container__3tdUF\",\"title\":\"GeneralResult_title__2p_CM\",\"totalVote\":\"GeneralResult_totalVote__19Bqa\",\"chart\":\"GeneralResult_chart__36BFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bar_container__2UN1d\",\"bar\":\"Bar_bar__1MtmQ\",\"percent\":\"Bar_percent__3uatp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"province\":\"Province_province__3usxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__35Xa2\"};","const scale = (x, inMin, inMax, outMin, outMax) => {\r\n  return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\r\n};\r\n\r\nexport const getPartysColor = (id, difference) => {\r\n  const colors = {\r\n    'Saadet Partisi': '#f05053',\r\n    BTP: '#b8f050',\r\n    TKP: '#d35400',\r\n    'Vatan Partisi': '#3498db',\r\n    BBP: '#e74c3c',\r\n    '6': '#fff',\r\n    CHP: '#ff3f34',\r\n    'AK Parti': '#ff9400',\r\n    DP: '#2980b9',\r\n    MHP: '#575fcf',\r\n    'Ä°yi Parti': '#f78fb3',\r\n    HDP: '#B33771',\r\n    DSP: '#3dc1d3'\r\n  };\r\n\r\n  if (difference) return `hsl(207, 37%, ${scale(difference, 0, 100, 85, 20)}%)`;\r\n  else return colors[id] || '#d1d8e0';\r\n};\r\n\r\nexport const round = num => Math.round(num * 100) / 100;\r\n\r\nexport const calcPercent = (count, totalCount) => {\r\n  return round((count / totalCount) * 100);\r\n};\r\n\r\nexport const sumOf = results => {\r\n  return results\r\n    .map(result => result.voteCount)\r\n    .reduce((a, b) => parseInt(a) + parseInt(b), 0);\r\n};\r\n\r\nexport const formatNumber = num => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n};\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ProvinceContext = createContext();\r\n\r\nexport const ProvinceProvider = props => {\r\n  const [province, setProvince] = useState();\r\n  return (\r\n    <ProvinceContext.Provider value={{ province, setProvince }}>\r\n      {props.children}\r\n    </ProvinceContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { ProvinceContext } from '../ProvinceContext';\r\nimport { getPartysColor, sumOf, calcPercent } from '../helpers';\r\nimport provincesPath from '../data/provincesPath.json';\r\nimport styles from './Province.module.css';\r\n\r\nconst Province = ({ province, isDiffShowing, appendActiveProvinces }) => {\r\n  const { setProvince } = useContext(ProvinceContext);\r\n  const { name, results, id } = province;\r\n  const pathToBeDrawn = provincesPath[id - 1];\r\n  let difference;\r\n\r\n  results.sort((a, b) => b.voteCount - a.voteCount);\r\n  const firstProvince = results[0];\r\n  appendActiveProvinces(firstProvince.name);\r\n\r\n  if (isDiffShowing) {\r\n    const {\r\n      0: { voteCount: firstProvinceCount },\r\n      1: { voteCount: secondProvinceCount }\r\n    } = results;\r\n\r\n    difference = calcPercent(\r\n      firstProvinceCount - secondProvinceCount,\r\n      sumOf(results)\r\n    );\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setProvince(province);\r\n  };\r\n\r\n  return (\r\n    <g\r\n      className={styles.province}\r\n      onClick={handleClick}\r\n      id={name}\r\n      style={{ fill: getPartysColor(firstProvince.name, difference) }}\r\n    >\r\n      <path d={pathToBeDrawn} />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default Province;\r\n","import React, { useState } from 'react';\r\nimport { getPartysColor } from '../helpers.js';\r\nimport data from '../data/secim.json';\r\nimport styles from './Map.module.css';\r\nimport Province from './Province';\r\n\r\nconst Map = () => {\r\n  const [isDiffShowing, setIsDiffShowing] = useState(false);\r\n  const [activeProvinces, setActiveProvinces] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    setIsDiffShowing(!isDiffShowing);\r\n  };\r\n\r\n  const appendActiveProvinces = provinceName => {\r\n    if (!activeProvinces.includes(provinceName))\r\n      setActiveProvinces([...activeProvinces, provinceName]);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button className={styles.btnDifference} onClick={handleClick}>\r\n        {isDiffShowing ? 'Genel Sonucu Goster' : 'Farki Goster'}\r\n      </button>\r\n      <div>\r\n        {/* https://github.com/dnomak/svg-turkiye-haritasi */}\r\n        <svg\r\n          version=\"1.1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n          viewBox=\"0 0 1007.478 527.323\"\r\n          xmlSpace=\"preserve\"\r\n        >\r\n          <g>\r\n            {data.map(province => (\r\n              <Province\r\n                key={province.id}\r\n                province={province}\r\n                isDiffShowing={isDiffShowing}\r\n                appendActiveProvinces={appendActiveProvinces}\r\n              />\r\n            ))}\r\n          </g>\r\n        </svg>\r\n\r\n        {isDiffShowing ? (\r\n          <div className={styles.holder}>\r\n            <span>Fark Fazla</span> <div className={styles.gradientBar}></div>{' '}\r\n            <span>Fark Az</span>\r\n          </div>\r\n        ) : (\r\n          <ul className={styles.list}>\r\n            {activeProvinces.map(provinceName => (\r\n              <li className={styles.item} key={provinceName}>\r\n                <div\r\n                  className={styles.box}\r\n                  style={{\r\n                    background: getPartysColor(provinceName)\r\n                  }}\r\n                />\r\n                <p className={styles.name}>{provinceName}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport styles from './Bar.module.css';\r\n\r\nconst Bar = ({ name, color, voteCount, votePercent }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h3>{name}</h3>\r\n      <div\r\n        className={styles.bar}\r\n        style={{ background: color, width: `${votePercent}%` }}\r\n      >\r\n        <span className={styles.percent}>{votePercent + '%'}</span>\r\n      </div>\r\n      <p>Oy: {voteCount}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useContext } from 'react';\r\nimport { ProvinceContext } from '../ProvinceContext';\r\nimport { getPartysColor, calcPercent, sumOf, formatNumber } from '../helpers';\r\nimport styles from './Detail.module.css';\r\nimport Bar from './Bar';\r\n\r\nconst Detail = () => {\r\n  const { province, setProvince } = useContext(ProvinceContext);\r\n\r\n  const closeDetail = () => {\r\n    setProvince('');\r\n  };\r\n\r\n  const createBar = ({ name, id, voteCount }) => {\r\n    const votePercent = calcPercent(voteCount, sumOf(province.results));\r\n    const color = getPartysColor(name);\r\n\r\n    return (\r\n      <Bar\r\n        key={id}\r\n        name={name}\r\n        color={color}\r\n        voteCount={formatNumber(voteCount)}\r\n        votePercent={votePercent}\r\n      />\r\n    );\r\n  };\r\n\r\n  return province ? (\r\n    <React.Fragment>\r\n      <div className={styles.overlay} onClick={closeDetail} />\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>{province.name}</h1>\r\n\r\n        {province.results.map(result => createBar(result))}\r\n\r\n        <button className={styles.btnExit} onClick={closeDetail}>\r\n          CLOSE\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : (\r\n    ''\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useState } from 'react';\r\nimport { sumOf, getPartysColor, round, formatNumber } from '../helpers';\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport styles from './GeneralResult.module.css';\r\nimport data from '../data/secim.json';\r\nimport Bar from './Bar.js';\r\n\r\nconst GeneralResult = () => {\r\n  let totalPartysVotes = { 'AK Parti': 0, CHP: 0, MHP: 0, Diger: 0 };\r\n  const [chartData, setChartData] = useState();\r\n\r\n  const totalVote = data\r\n    .map(province => sumOf(province.results))\r\n    .reduce((a, b) => a + b, 0);\r\n\r\n  // Calculate partys' vote\r\n  data.forEach(province => {\r\n    province.results.forEach(({ name, voteCount }) => {\r\n      if (Object.keys(totalPartysVotes).includes(name))\r\n        totalPartysVotes[name] += parseInt(voteCount);\r\n      else totalPartysVotes.Diger += parseInt(voteCount);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>TÃ¼rkiye Geneli</h2>\r\n\r\n      <PieChart\r\n        className={styles.chart}\r\n        data={Object.entries(totalPartysVotes).map(party => ({\r\n          title: party[0],\r\n          value: party[1],\r\n          color: getPartysColor(party[0])\r\n        }))}\r\n        label={({ data, dataIndex }) => {\r\n          chartData || setChartData(data);\r\n          return round(data[dataIndex].percentage) + '%';\r\n        }}\r\n        labelStyle={{\r\n          fontSize: '5px',\r\n          fontFamily: 'sans-serif',\r\n          fill: '#121212'\r\n        }}\r\n        animate\r\n      />\r\n\r\n      <h3 className={styles.totalVote}>Toplam Oy: {formatNumber(totalVote)}</h3>\r\n      {chartData\r\n        ? chartData.map(({ title, color, percentage }) => (\r\n            <Bar\r\n              key={title}\r\n              name={title}\r\n              color={color}\r\n              votePercent={round(percentage)}\r\n              voteCount={formatNumber(totalPartysVotes[title])}\r\n            />\r\n          ))\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralResult;\r\n","import React from 'react';\r\nimport data from '../data/secim.json';\r\nimport PieChart from 'react-minimal-pie-chart';\r\n\r\nconst RandomResults = () => {\r\n  const randomCount = window.innerWidth > 1200 ? 5 : 3;\r\n  const randomIndex = Math.floor(Math.random() * data.length - 1 - randomCount);\r\n  const selectedProvinces = data.slice(randomIndex, randomIndex + randomCount);\r\n  console.log('TCL: RandomResults -> selectedProvinces', selectedProvinces);\r\n\r\n  return false ? (\r\n    <PieChart\r\n      data={[\r\n        { title: 'One', value: 10, color: '#E38627' },\r\n        { title: 'Two', value: 15, color: '#C13C37' },\r\n        { title: 'Three', value: 20, color: '#6A2135' }\r\n      ]}\r\n      lineWidth={15}\r\n      startAngle={180}\r\n      lengthAngle={180}\r\n      label={({ data, dataIndex }) =>\r\n        Math.round(data[dataIndex].percentage) + '%'\r\n      }\r\n      labelStyle={{\r\n        fontSize: '2px',\r\n        fontFamily: 'sans-serif'\r\n      }}\r\n      radius={42}\r\n      labelPosition={112}\r\n    />\r\n  ) : (\r\n    ''\r\n  );\r\n};\r\n\r\nexport default RandomResults;\r\n","import React from 'react';\nimport Map from './components/Map';\nimport Detail from './components/Detail';\nimport { ProvinceProvider } from './ProvinceContext';\nimport GeneralResult from './components/GeneralResult';\nimport styles from './App.module.css';\nimport RandomResults from './components/RandomResults';\n\nconst App = () => {\n  return (\n    <ProvinceProvider className=\"helo\">\n      <RandomResults />\n      <div className={styles.container}>\n        <GeneralResult />\n        <Map />\n      </div>\n      <Detail />\n    </ProvinceProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}